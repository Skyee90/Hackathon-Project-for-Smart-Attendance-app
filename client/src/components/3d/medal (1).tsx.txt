import { useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { Sphere, Text } from "@react-three/drei";
import * as THREE from "three";
import { cn } from "@/lib/utils";

interface Medal3DProps {
  type: "streak" | "homework" | "achievement" | "perfect";
  size?: number;
  className?: string;
}

function MedalMesh({ type }: { type: Medal3DProps["type"] }) {
  const meshRef = useRef<THREE.Mesh>(null!);
  
  useFrame((state, delta) => {
    meshRef.current.rotation.y += delta * 0.5;
    meshRef.current.rotation.x = Math.sin(state.clock.elapsedTime) * 0.1;
  });

  const getMedalConfig = (type: string) => {
    switch (type) {
      case "streak":
        return { color: "#FFD700", icon: "üî•", text: "STREAK" };
      case "homework":
        return { color: "#4F46E5", icon: "üìö", text: "STUDY" };
      case "achievement":
        return { color: "#10B981", icon: "üèÜ", text: "WIN" };
      default:
        return { color: "#FFD700", icon: "‚≠ê", text: "STAR" };
    }
  };

  const config = getMedalConfig(type);

  return (
    <mesh ref={meshRef} position={[0, 0, 0]}>
      {/* Main medal body */}
      <Sphere args={[1, 32, 32]}>
        <meshStandardMaterial
          color={config.color}
          metalness={0.8}
          roughness={0.2}
          envMapIntensity={1}
        />
      </Sphere>
      
      {/* Inner ring */}
      <Sphere args={[0.7, 32, 32]} position={[0, 0, 0.1]}>
        <meshStandardMaterial
          color="#FFA500"
          metalness={0.9}
          roughness={0.1}
        />
      </Sphere>

      {/* Text */}
      <Text
        position={[0, 0, 0.8]}
        fontSize={0.3}
        color="#FFFFFF"
        anchorX="center"
        anchorY="middle"
        font="/fonts/inter-bold.woff"
      >
        {config.text}
      </Text>
    </mesh>
  );
}

export function Medal3D({ type, size = 120, className, ...props }: Medal3DProps) {
  return (
    <div 
      className={cn("medal-container", className)}
      style={{ width: size, height: size }}
      {...props}
    >
      <Canvas
        camera={{ position: [0, 0, 5], fov: 50 }}
        style={{ width: '100%', height: '100%' }}
      >
        {/* Lighting */}
        <ambientLight intensity={0.6} />
        <pointLight position={[10, 10, 10]} intensity={1} />
        <pointLight position={[-10, -10, -10]} intensity={0.5} />
        
        {/* Medal */}
        <MedalMesh type={type} />
      </Canvas>
    </div>
  );
}
